using Mekatrol.Automatum.Common.Utilities;

namespace Mekatrol.Automatum.Tests.Unit.Utilities;

[TestClass]
public class CrcTest
{
    [TestMethod]
    public void TestModbusCrc()
    {
        // See: https://www.waveshare.com/wiki/Modbus_RTU_Relay#Set_Device_Address_Command
        Assert.AreEqual(0x3A8C, Crc.ModbusCrc16([0x01, 0x05, 0x00, 0x00, 0xFF, 0x00, 0x8C, 0x3A], 0, 6));
        Assert.AreEqual(0xCACD, Crc.ModbusCrc16([0x01, 0x05, 0x00, 0x00, 0x00, 0x00, 0xCD, 0xCA], 0, 6));
        Assert.AreEqual(0xFADD, Crc.ModbusCrc16([0x01, 0x05, 0x00, 0x01, 0xFF, 0x00, 0xDD, 0xFA], 0, 6));
        Assert.AreEqual(0x0A9C, Crc.ModbusCrc16([0x01, 0x05, 0x00, 0x01, 0x00, 0x00, 0x9C, 0x0A], 0, 6));
        Assert.AreEqual(0xFA2D, Crc.ModbusCrc16([0x01, 0x05, 0x00, 0x02, 0xFF, 0x00, 0x2D, 0xFA], 0, 6));
        Assert.AreEqual(0x0A6C, Crc.ModbusCrc16([0x01, 0x05, 0x00, 0x02, 0x00, 0x00, 0x6C, 0x0A], 0, 6));
        Assert.AreEqual(0x3A7C, Crc.ModbusCrc16([0x01, 0x05, 0x00, 0x03, 0xFF, 0x00, 0x7C, 0x3A], 0, 6));
        Assert.AreEqual(0xCA3D, Crc.ModbusCrc16([0x01, 0x05, 0x00, 0x03, 0x00, 0x00, 0x3D, 0xCA], 0, 6));
        Assert.AreEqual(0x9AF2, Crc.ModbusCrc16([0x01, 0x05, 0x00, 0x00, 0x55, 0x00, 0xF2, 0x9A], 0, 6));
        Assert.AreEqual(0x5AA3, Crc.ModbusCrc16([0x01, 0x05, 0x00, 0x01, 0x55, 0x00, 0xA3, 0x5A], 0, 6));
        Assert.AreEqual(0x5A53, Crc.ModbusCrc16([0x01, 0x05, 0x00, 0x02, 0x55, 0x00, 0x53, 0x5A], 0, 6));
        Assert.AreEqual(0x9A02, Crc.ModbusCrc16([0x01, 0x05, 0x00, 0x03, 0x55, 0x00, 0x02, 0x9A], 0, 6));

        Assert.AreEqual(0xCC3D, Crc.ModbusCrc16([0x01, 0x01, 0x00, 0x00, 0x00, 0x08, 0x3D, 0xCC], 0, 6));
        Assert.AreEqual(0xB08D, Crc.ModbusCrc16([0x01, 0x05, 0x02, 0x00, 0x00, 0x07, 0x8D, 0xB0], 0, 6));
        Assert.AreEqual(0xD843, Crc.ModbusCrc16([0x00, 0x06, 0x20, 0x00, 0x00, 0x05, 0x43, 0xD8], 0, 6));

        // Longer message
        Assert.AreEqual(0xD5Be, Crc.ModbusCrc16([0x01, 0x0F, 0x00, 0x00, 0x00, 0x08, 0x01, 0xFF, 0xBE, 0xD5], 0, 8));

        // Default offset and length values
        Assert.AreEqual(0xD5Be, Crc.ModbusCrc16([0x01, 0x0F, 0x00, 0x00, 0x00, 0x08, 0x01, 0xFF]));

        // Offset by 1 (ignore first byte)
        Assert.AreEqual(0xD5Be, Crc.ModbusCrc16([0xFF, 0x01, 0x0F, 0x00, 0x00, 0x00, 0x08, 0x01, 0xFF], 1));
    }
}